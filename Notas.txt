Notas do Curso React Native 

Repositório do curso: https://github.com/cod3rcursos/curso-react-native.git

Configuração do ambiente:

JAVA_HOME=C:\Program Files\Java\jre1.8.0_231
ANDROID_HOME=C:\Users\marco\AppData\Local\Android\Sdk

Documentação: https://facebook.github.io/react-native/

Variáveis de Ambiente Android Studio:
ANDROID_HOME=C:\Users\marco\AppData\Local\Android\Sdk
Adicionar no Path:
%ANDROID_HOME%\emulator
%ANDROID_HOME%\tools
%ANDROID_HOME%\tools\bin
%ANDROID_HOME%\platform-tools

Em prompt de comando verificar versão do adb e emulator:
adb --version
emulator -version

Aceitar as lincenças:
sdkmanager --licenses

Listar os emuladores que estão instalados no computador:
emulator -list-avds

Executar o emulador:
emulator -no-snapshot -avd Nexus_5X_API_29_x86
emulator -avd Nexus_5X_API_29_x86

A opção "-no-snapshot" inicia o emulador com um boot "limpo", caso o emulador atual esteja apresentando algum problema ao iniciar.

Configurar o React-Native:
npm i -g react-native-cli

Criar o projeto exercicios
react-native init exercicios

*** IMPORTANTE ***************************************************************
Antes de fazer o deploy e executar o projeto no emulador do Android, devemos fazer alguns procedimentos antes, devido a um erro: "Unable to load script. Make sure you're either running a Metro server (run 'react-native start') or that your bundle 'index.android.bundle' is package correctly for release.

1) Criar o diretório "android/app/src/main/assets";
2) Editar o arquivo do projeto node_modules\metro-config\src\defaults\blacklist.js
	Substituir neste arquivo:
	
	var sharedBlacklist = [
	  /node_modules[/\\]react[/\\]dist[/\\].*/,
	  /website\/node_modules\/.*/,
	  /heapCapture\/bundle\.js/,
	  /.*\/__tests__\/.*/
	];	
	
	por isso:
	
	var sharedBlacklist = [
	  /node_modules[\/\\]react[\/\\]dist[\/\\].*/,
	  /website\/node_modules\/.*/,
	  /heapCapture\/bundle\.js/,
	  /.*\/__tests__\/.*/
	];

3) Dentro do diretório do raiz do projeto, executar o comando:
react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res

Fonte no Youtube, mas nos comentários do vídeo que mostra isso que funciona: https://www.youtube.com/watch?v=8FEm1SjL1Vg

******************************************************************************

Executar o projeto:
npx react-native run-android
npx react-native run-ios

Observação: Na aula foi dito que deve ser: 
react-native run-android
react-native run-ios

**** Para rodar o projeto no Expo - WINDOWS: *********************************
- Verificar se o node e npm está instalado:
node -v
npm -v
- Executar o comando:
npm i -g create-react-native-app
- Devemos instalar o Python27 e o Visual Studio - C++
npm i -g envsub
npm install --global expo-cli@3.7.1
create-react-native-app test-app
cd test-app
npm start
******************************************************************************

Textos - Configuração do Ambiente - Linux
1. Instalar Java

============================================================

sudo apt update

sudo apt install default-jdk

============================================================


2. Instalar Node & NPM

============================================================

sudo apt-get update

sudo apt-get install curl

curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -

sudo apt-get install -y nodejs

============================================================


3. Instalar Android Studio

============================================================

1- Baixar Android Studio em: https://developer.android.com/studio

2- Descompactar e jogar a pasta 'android-studio' na home.

3- Terminal -> cd android-studio -> cd bin -> ./studio.sh

4- Custom Installation -> Selecionar Tema -> Marcar Android Virtual Device

5- Android Studio -> Configure -> AVD Manager ( Verificar se o Dispositivo Padrão foi criado )

OBS: Instalar qualquer item do SDK Tools para aceitar as licenças.

=============================================================

3.1 Caso erro /dev/kvm device: permission denied

=============================================================

sudo apt install qemu-kvm

sudo adduser cod3r kvm

sudo chown cod3r /dev/kvm

=============================================================


4. Variaveis de Ambiente (.bashrc)

=============================================================

export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64

export ANDROID_HOME=$HOME/Android/Sdk

export PATH=$PATH:$ANDROID_HOME/emulator

export PATH=$PATH:$ANDROID_HOME/tools

export PATH=$PATH:$ANDROID_HOME/tools/bin

export PATH=$PATH:$ANDROID_HOME/platform-tools

=============================================================


5. React Native & Projeto

=============================================================

sudo npm i -g react-native-cli

react-native init exercicios

react-native start

react-native run-android

=============================================================

Obs.: Na aula 19, no ambiente do Mac, o Leonardo precisou acrescentar no Path a pasta Emulator, para executar o emulador.

No emulador Ctrl+M para mostrar as opções do Emulator.


Aula 26: Cuidado para desenvolver no iOS e Android: A barra superior do Android, onde tem o relógio, não conta como área útil para a aplicação. Já no iOS conta como área útil, então a aplicação fica sobrepondo a barra superior.

https://facebook.github.io/react-native/docs/flexbox.html

Aula 38: Projeto Calculadora

Para criar o projeto:
react-native init calculator


Aula 45: Correção
Comando de LOG:
Android: react-native log-android
iOS: react-native log-ios
No código: console.debug(typeof this.state.displayValue)

Aula 47 - Projeto Campo Minado
react-native init mines


